package universidadejemgrupo64.Vistas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import universidadejemgrupo64.Entidades.Materia;
import universidadejemplogrupo64.AccesoADatos.Conexion;
import universidadejemplogrupo64.AccesoADatos.MateriaData;

public class FormularioMateria extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioMateria
     */
    public FormularioMateria() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPEscritorio = new javax.swing.JPanel();
        jtID = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jtAnio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jlCodigoEtiqueta = new javax.swing.JLabel();
        jlNombreEtiqueta = new javax.swing.JLabel();
        jlAnioEtiqueta = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jrbEstado = new javax.swing.JRadioButton();
        jbEliminar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jlBuscar = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        jPEscritorio.setBackground(new java.awt.Color(0, 102, 255));

        jtID.setBackground(new java.awt.Color(255, 255, 255));
        jtID.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jtID.setForeground(new java.awt.Color(0, 0, 0));

        jtNombre.setBackground(new java.awt.Color(255, 255, 255));
        jtNombre.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jtNombre.setForeground(new java.awt.Color(0, 0, 0));

        jtAnio.setBackground(new java.awt.Color(255, 255, 255));
        jtAnio.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jtAnio.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Materias");

        jlCodigoEtiqueta.setBackground(new java.awt.Color(0, 0, 0));
        jlCodigoEtiqueta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlCodigoEtiqueta.setForeground(new java.awt.Color(255, 255, 255));
        jlCodigoEtiqueta.setText("ID");

        jlNombreEtiqueta.setBackground(new java.awt.Color(0, 0, 0));
        jlNombreEtiqueta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNombreEtiqueta.setForeground(new java.awt.Color(255, 255, 255));
        jlNombreEtiqueta.setText("Nombre: ");

        jlAnioEtiqueta.setBackground(new java.awt.Color(0, 0, 0));
        jlAnioEtiqueta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAnioEtiqueta.setForeground(new java.awt.Color(255, 255, 255));
        jlAnioEtiqueta.setText("AÃ±o: ");

        jlEstado.setBackground(new java.awt.Color(0, 0, 0));
        jlEstado.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlEstado.setForeground(new java.awt.Color(255, 255, 255));
        jlEstado.setText("Estado: ");

        jrbEstado.setBackground(new java.awt.Color(0, 102, 255));
        jrbEstado.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jrbEstado.setForeground(new java.awt.Color(255, 255, 255));
        jrbEstado.setText("Activo");

        jbEliminar.setBackground(new java.awt.Color(0, 102, 255));
        jbEliminar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbGuardar.setBackground(new java.awt.Color(0, 102, 255));
        jbGuardar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbNuevo.setBackground(new java.awt.Color(0, 102, 255));
        jbNuevo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbNuevo.setForeground(new java.awt.Color(255, 255, 255));
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jlBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/32x32.png"))); // NOI18N
        jlBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlBuscarMouseClicked(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(0, 102, 255));
        jbSalir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPEscritorioLayout = new javax.swing.GroupLayout(jPEscritorio);
        jPEscritorio.setLayout(jPEscritorioLayout);
        jPEscritorioLayout.setHorizontalGroup(
            jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEscritorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPEscritorioLayout.createSequentialGroup()
                        .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jPEscritorioLayout.createSequentialGroup()
                                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlCodigoEtiqueta)
                                    .addComponent(jlNombreEtiqueta)
                                    .addComponent(jlAnioEtiqueta)
                                    .addComponent(jlEstado))
                                .addGap(45, 45, 45)
                                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtID, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(jtNombre)
                                    .addComponent(jtAnio)
                                    .addComponent(jrbEstado))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPEscritorioLayout.createSequentialGroup()
                        .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jbSalir)
                        .addContainerGap())))
        );
        jPEscritorioLayout.setVerticalGroup(
            jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEscritorioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPEscritorioLayout.createSequentialGroup()
                        .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPEscritorioLayout.createSequentialGroup()
                                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlCodigoEtiqueta))
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPEscritorioLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNombreEtiqueta))
                        .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPEscritorioLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPEscritorioLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlAnioEtiqueta)
                                .addGap(55, 55, 55))))
                    .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlEstado)
                        .addComponent(jrbEstado)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEliminar)
                    .addComponent(jbGuardar)
                    .addComponent(jbNuevo)
                    .addComponent(jbSalir))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPEscritorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPEscritorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        // Obtener los datos de la nueva materia desde los campos de texto
       String nombreMateria = jtNombre.getText();
        int anioMateria = Integer.parseInt(jtAnio.getText()); // Convertir a entero
        boolean estadoMateria = true; // Por defecto, puedes cambiar esto segÃºn tus necesidades

        try {
            // Establecer la conexiÃ³n a la base de datos
            Connection con = Conexion.getConexion();

            // Crear y ejecutar una consulta SQL para insertar la nueva materia
            String sql = "INSERT INTO materia (nombre, aÃ±o, estado) VALUES (?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, nombreMateria);
            ps.setInt(2, anioMateria);
            ps.setBoolean(3, estadoMateria);

            int exito = ps.executeUpdate();
            if (exito == 1) {
                JOptionPane.showMessageDialog(null, "Materia Guardada"); 
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar la materia");
            }

            // Cerrar la conexiÃ³n y el PreparedStatement
            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la tabla Materia");
        }


        // Limpiar los campos despuÃ©s de guardar
        jtID.setText("");
        jtNombre.setText("");
        jtAnio.setText("");
        jrbEstado.setSelected(false);

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
       String eliminarMateria = jtNombre.getText();

        try {
            // Establecer la conexiÃ³n a la base de datos
            Connection con = Conexion.getConexion();

            // Crear y ejecutar una consulta SQL para insertar la nueva materia
            String sql = "UPDATE materia SET estado = 0 WHERE nombre = ?";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(WIDTH, eliminarMateria);

            int exito = ps.executeUpdate();
            if (exito == 1) {
                JOptionPane.showMessageDialog(null, "Materia dada de Baja correctamente!"); 
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar la materia");
            }

            // Cerrar la conexiÃ³n y el PreparedStatement
            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la tabla Materia");
        }

        /*try {
            // Mostrar un cuadro de diÃ¡logo de confirmaciÃ³n
            int respuesta = JOptionPane.showConfirmDialog(this, "Â¿EstÃ¡s seguro de que deseas eliminar esta Materia?", "Confirmar EliminaciÃ³n", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                materiaAEliminar.eliminarMateria(WIDTH);
                JOptionPane.showMessageDialog(this, "Materia eliminado exitosamente!!!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }*/

        // Limpiar los campos despuÃ©s de eliminar
        jtID.setText("");
        jtNombre.setText("");
        jtAnio.setText("");
        jrbEstado.setSelected(false);
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jlBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlBuscarMouseClicked
        // TODO add your handling code here:
        String nombreMateria = jtNombre.getText(); // Obtener el nombre de la materia ingresado por el usuario

        try {
            // Establecer la conexiÃ³n a la base de datos
            Connection con = Conexion.getConexion();

            // Crear y ejecutar una consulta SQL para buscar la materia por nombre
            String sql = "SELECT * FROM materia WHERE nombre = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, nombreMateria);
            ResultSet rs = ps.executeQuery();

            // Verificar si la materia se encontrÃ³
            if (rs.next()) {
                // La materia se encontrÃ³, puedes mostrar un mensaje o realizar alguna acciÃ³n
                JOptionPane.showMessageDialog(this, "La materia se encontrÃ³ en la lista.");
            } else {
                // La materia no se encontrÃ³, puedes mostrar un mensaje o realizar otra acciÃ³n
                JOptionPane.showMessageDialog(this, "La materia No se encontrÃ³ en la lista.");
            }

            // Cerrar la conexiÃ³n
            ps.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la tabla Materia");
            // Manejar la excepciÃ³n apropiadamente, por ejemplo, mostrar un mensaje de error al usuario.
        }
            // Limpiar los campos si la materia no se encontrÃ³
            jtID.setText("");
            jtAnio.setText("");
            jrbEstado.setSelected(false);
        
    }//GEN-LAST:event_jlBuscarMouseClicked

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.YES_NO_OPTION;
        int resultado = JOptionPane.showConfirmDialog(this, "Desea Salir?", "SALIR", a);
        if (resultado == 0) {

            this.dispose();
        }
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        jtID.setText("");
        jtNombre.setText("");
        jtAnio.setText("");
        jrbEstado.setSelected(false);
    }//GEN-LAST:event_jbNuevoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPEscritorio;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlAnioEtiqueta;
    private javax.swing.JLabel jlBuscar;
    private javax.swing.JLabel jlCodigoEtiqueta;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlNombreEtiqueta;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JTextField jtAnio;
    private javax.swing.JTextField jtID;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
