/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadejemgrupo64.Vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadejemgrupo64.Entidades.Alumno;
import universidadejemgrupo64.Entidades.Inscripcion;
import universidadejemgrupo64.Entidades.Materia;
import universidadejemplogrupo64.AccesoADatos.AlumnoData;
import universidadejemplogrupo64.AccesoADatos.InscripcionData;
import universidadejemplogrupo64.AccesoADatos.MateriaData;

/**
 *
 * @author Mis Documentos
 */
public class CargaDeNotas extends javax.swing.JInternalFrame {

    private MateriaData materiaData;

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {

            if (c == 2) {
                return true;
            }
            return false;
        }

    };

    /**
     * Creates new form CargaDeNotas
     */

    public CargaDeNotas() {
        initComponents();

        armarCabecera();
        cargarAlumnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaMateria = new javax.swing.JTable();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jbGuardarN = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Carga de notas");

        jLabel2.setText("Seleccione un alumno:");

        jtTablaMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtTablaMateria);

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jbGuardarN.setText("Guardar");
        jbGuardarN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarNActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jbGuardarN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardarN)
                    .addComponent(jbSalir))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        // TODO add your handling code here:

        Alumno alumnoSeleccionado = (Alumno) jcbAlumnos.getSelectedItem();
        //InscripcionData aluIns = new InscripcionData();
        InscripcionData insc = new InscripcionData();
        if (alumnoSeleccionado != null) {
            borrarFilas();
            for (Inscripcion inscrip : insc.obtenerMateriasCursadasDos(alumnoSeleccionado.getIdAlumno())) {

                modelo.addRow(new Object[]{
                    inscrip.getMateria().getIdMateria(),
                    inscrip.getMateria().getNombre(),
                    inscrip.getNota()});
            }
        }

//            int idSeleccionado = alumnoSeleccionado.getIdAlumno();
//            JOptionPane.showMessageDialog(null,idSeleccionado );
//            for(Inscripcion listarMateria: insc.obtenerMateriasCursadas(idSeleccionado)){
//               jcbAlumnos.addItem(listarMateria);
        // Alumno alumnoSeleccionado = (Alumno) jcbAlumnos.getSelectedItem();
//
//         if (alumnoSeleccionado != null) {
//           
//            for (Materia materiaConNota : insc.cargarMateriasConNotas(alumnoSeleccionado.getIdAlumno())) {
//        Materia materia = materiaConNota;
//        //int nota = materiaConNota.get;
//        modelo.addRow(new Object[]{
//            materia.getIdMateria(),
//            materia.getNombre(),
//           // materia.getAnio(),
//            //nota // Agrega la columna de nota
//        });
//    }

    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbGuardarNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarNActionPerformed
        // TODO add your handling code here:
        InscripcionData insc = new InscripcionData();
        Inscripcion in = new Inscripcion();
        int filaSeleccinada = jtTablaMateria.getSelectedRow();

        if (filaSeleccinada != -1) {
            int idmateria = (Integer) jtTablaMateria.getValueAt(filaSeleccinada, 0);
            double nota2 = obtenerNuevaNota();
            // double nota=(Double)jtTablaMateria.getValueAt(filaSeleccinada, 2);
            jtTablaMateria.setValueAt(nota2, filaSeleccinada, 2);

            for (Alumno alum : insc.obtenerAlumnosPorMateria(idmateria)) {
                int idalumno = alum.getIdAlumno();
                insc.actualizarNota(idalumno, idmateria, nota2);
            }
        }
    }//GEN-LAST:event_jbGuardarNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbGuardarN;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JTable jtTablaMateria;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("idMateria");
        modelo.addColumn("nombre");
        modelo.addColumn("Nota");
        jtTablaMateria.setModel(modelo);

    }

    private void borrarFilas() {

        int filas = jtTablaMateria.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    private void cargarAlumnos() {

        AlumnoData alu = new AlumnoData();
        for (Alumno alumno : alu.listarAlumnos()) {
            jcbAlumnos.addItem(alumno);
        }
    }

    private double obtenerNuevaNota() {
        String input = JOptionPane.showInputDialog("Ingrese la nueva nota:");
        try {
            return Double.parseDouble(input);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La entrada no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return 0.0; 
        }
    }
}
